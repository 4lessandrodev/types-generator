import { Filter, IMapper } from 'types-ddd';
import I{{pascalCase name}}Repo from '@modules/{{dashCase name}}/domain/repo/{{dashCase name}}.repo';
import {{pascalCase name}}Aggregate from '@modules/{{dashCase name}}/domain/aggregates/{{dashCase name}}.aggregate';
import {{pascalCase name}}Model from '@modules/{{dashCase name}}/infra/models/{{dashCase name}}.model';

export class {{pascalCase name}}Repo implements I{{pascalCase name}}Repo<{{pascalCase name}}Aggregate, {{pascalCase name}}Model> {
    constructor(
        private readonly mapper: IMapper<{{pascalCase name}}Aggregate, {{pascalCase name}}Model>
    ){}
    async save (aggregate: {{pascalCase name}}Aggregate): Promise<void>{
        throw new Error("Method not implemented");
    };
    async findMany (filter: Filter<Partial<{{pascalCase name}}Model>>): Promise<{{pascalCase name}}Aggregate[]>{
        throw new Error("Method not implemented");
    };
}

export default {{pascalCase name}}Repo;
